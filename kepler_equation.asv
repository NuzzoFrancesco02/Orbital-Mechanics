function E = kepler_equation(t, e, a, mu, t0, E0, toll)
    
    if nargin == 6
        toll = 1e-6;
    end
    t = t - t0;
    n = sqrt( mu / a^3 );
    T = 2 * pi / n; 
    %{
    if abs(t(end)/T - round(t(end)/T)) <= eps
        k = round( t(end) / T );
    else
        k = floor( t(end) / T );
    end
    %}
    k = floor(t./T);
    E_guess = n.*t + (e.*sin(n.*t))./(1-sin(n.*t+e)+sin(n.*t));
    options = optimoptions('fsolve','FunctionTolerance',toll);
    t = t - k.*T;
    E = fsolve(@(E) n.*t-E+e.*sin(E),E_guess,options) + E0;
    E = k*2*pi + E - E0;
    th = 2*atan2()
end